{"version":3,"sources":["core/config/layout.ts","core/components/SettingsDrawer.tsx","../node_modules/@material-ui/icons/Home.js","../node_modules/@material-ui/icons/BarChart.js","admin/components/AdminDrawer.tsx","admin/pages/Admin.tsx"],"names":["drawerCollapsedWidth","drawerWidth","SettingsDrawer","onDrawerToggle","open","useSettings","changeCollapsed","changeMode","changeDirection","collapsed","mode","direction","useTranslation","i18n","t","anchor","onClose","sx","width","variant","display","justifyContent","alignItems","p","color","onClick","edge","pl","pr","gutterBottom","id","marginTop","aria-label","name","onChange","event","changeLanguage","target","value","language","control","label","exclusive","fullWidth","_","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","menuItems","icon","HomeIcon","key","path","BarChartIcon","AdminDrawer","mobileOpen","userInfo","onSettingsToggle","JSON","parse","localStorage","getItem","drawer","Box","flexDirection","minHeight","Logo","List","component","px","map","item","ListItem","button","NavLink","activeClassName","end","to","process","ListItemAvatar","Avatar","bgcolor","ListItemText","primary","flexGrow","venueName","lg","flexShrink","Drawer","ModalProps","keepMounted","xs","boxSizing","AdminLayout","useState","settingsOpen","setSettingsOpen","toggleDrawer","handleSettingsToggle","pb","sm","Toolbar","QueryWrapper"],"mappings":"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","file":"static/js/21.8f00aaa0.chunk.js","sourcesContent":["export const drawerCollapsedWidth = 104;\nexport const drawerWidth = 280;\n","import Box from \"@material-ui/core/Box\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport ToggleButton from \"@material-ui/core/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/core/ToggleButtonGroup\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useTranslation } from \"react-i18next\";\nimport { drawerWidth } from \"../config/layout\";\nimport { useSettings } from \"../contexts/SettingsProvider\";\n\ntype SettingsDrawerProps = {\n  onDrawerToggle: () => void;\n  open: boolean;\n};\n\nconst SettingsDrawer = ({ onDrawerToggle, open }: SettingsDrawerProps) => {\n  const {\n    changeCollapsed,\n    changeDirection,\n    changeMode,\n    collapsed,\n    direction,\n    mode,\n  } = useSettings();\n  const { i18n, t } = useTranslation();\n\n  const handleDirectionChange = (_: any, direction: \"ltr\" | \"rtl\") => {\n    changeDirection(direction);\n  };\n\n  const handleLanguageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    i18n.changeLanguage((event.target as HTMLInputElement).value);\n  };\n\n  const handleModeChange = (_: any, mode: string) => {\n    changeMode(mode);\n  };\n\n  const handleSidebarChange = (_: any, collapsed: boolean) => {\n    changeCollapsed(collapsed);\n  };\n\n  return (\n    <Drawer\n      anchor=\"left\"\n      open={open}\n      onClose={onDrawerToggle}\n      sx={{\n        \"& .MuiDrawer-paper\": {\n          width: drawerWidth,\n        },\n      }}\n      variant=\"temporary\"\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          p: 2,\n        }}\n      >\n        <Typography variant=\"h5\">{t(\"settings.drawer.title\")}</Typography>\n        <IconButton color=\"inherit\" onClick={onDrawerToggle} edge=\"end\">\n          <CloseIcon />\n        </IconButton>\n      </Box>\n      <Box sx={{ pl: 2, pr: 2 }}>\n        <Typography\n          gutterBottom\n          id=\"settings-language\"\n          marginTop={3}\n          variant=\"h6\"\n        >\n          {t(\"settings.drawer.language.label\")}\n        </Typography>\n        <FormControl>\n          <RadioGroup\n            aria-label=\"language\"\n            name=\"language-radio-group\"\n            onChange={handleLanguageChange}\n            value={i18n.language}\n          >\n            <FormControlLabel\n              value=\"en\"\n              control={<Radio />}\n              label={t(\"settings.drawer.language.options.en\")}\n            />\n            <FormControlLabel\n              value=\"fr\"\n              control={<Radio />}\n              label={t(\"settings.drawer.language.options.fr\")}\n            />\n          </RadioGroup>\n        </FormControl>\n        <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\n          {t(\"settings.drawer.mode.label\")}\n        </Typography>\n        <ToggleButtonGroup\n          color=\"primary\"\n          value={mode}\n          exclusive\n          fullWidth\n          onChange={handleModeChange}\n        >\n          <ToggleButton value=\"light\">\n            {t(\"settings.drawer.mode.options.light\")}\n          </ToggleButton>\n          <ToggleButton value=\"dark\">\n            {t(\"settings.drawer.mode.options.dark\")}\n          </ToggleButton>\n        </ToggleButtonGroup>\n        {/* <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\n          {t(\"settings.drawer.direction.label\")}\n        </Typography>\n        <ToggleButtonGroup\n          color=\"primary\"\n          value={direction}\n          exclusive\n          fullWidth\n          onChange={handleDirectionChange}\n        >\n          <ToggleButton value=\"ltr\">\n            {t(\"settings.drawer.direction.options.ltr\")}\n          </ToggleButton>\n          <ToggleButton value=\"rtl\">\n            {t(\"settings.drawer.direction.options.rtl\")}\n          </ToggleButton>\n        </ToggleButtonGroup> */}\n        <Typography\n          gutterBottom\n          id=\"settings-sidebar\"\n          marginTop={3}\n          variant=\"h6\"\n        >\n          {t(\"settings.drawer.sidebar.label\")}\n        </Typography>\n        <ToggleButtonGroup\n          color=\"primary\"\n          value={collapsed}\n          exclusive\n          fullWidth\n          onChange={handleSidebarChange}\n        >\n          <ToggleButton value={true}>\n            {t(\"settings.drawer.sidebar.options.collapsed\")}\n          </ToggleButton>\n          <ToggleButton value={false}>\n            {t(\"settings.drawer.sidebar.options.full\")}\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </Box>\n    </Drawer>\n  );\n};\n\nexport default SettingsDrawer;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\"\n}), 'Home');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 9.2h3V19H5zM10.6 5h2.8v14h-2.8zm5.6 8H19v6h-2.8z\"\n}), 'BarChart');\n\nexports.default = _default;","// @ts-nocheck\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PersonIcon from '@material-ui/icons/Person';\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport { useTranslation } from 'react-i18next';\nimport { NavLink } from 'react-router-dom';\nimport Logo from '../../core/components/Logo';\nimport { drawerCollapsedWidth, drawerWidth } from '../../core/config/layout';\n\ntype AdminDrawerProps = {\n  collapsed: boolean;\n  mobileOpen: boolean;\n  onDrawerToggle: () => void;\n  onSettingsToggle: () => void;\n};\n\nexport const menuItems = [\n  {\n    icon: HomeIcon,\n    key: 'admin.drawer.menu.home',\n    path: '/admin',\n  },\n  {\n    icon: BarChartIcon,\n    key: 'admin.drawer.menu.dashboard',\n    path: '/admin/dashboard',\n  },\n  // {\n  //   icon: PeopleIcon,\n  //   key: 'admin.drawer.menu.userManagement',\n  //   path: '/admin/user-management',\n  // },\n  //{\n  //  icon: EventIcon,\n  //  key: \"admin.drawer.menu.calendar\",\n  //  path: \"/admin/calendar\",\n  //},\n  //{\n  //  icon: AccountTreeIcon,\n  //  key: \"admin.drawer.menu.projects\",\n  //  path: \"/admin/projects\",\n  //},\n  // {\n  //   icon: HelpCenterIcon,\n  //   key: 'admin.drawer.menu.help',\n  //   path: '/admin/help',\n  // },\n];\n\nconst AdminDrawer = ({\n  collapsed,\n  mobileOpen,\n  onDrawerToggle,\n  onSettingsToggle,\n}: AdminDrawerProps) => {\n  const userInfo = JSON.parse(localStorage.getItem('venueInfo'));\n  const { t } = useTranslation();\n\n  const width = collapsed ? drawerCollapsedWidth : drawerWidth;\n\n  const drawer = (\n    <Box sx={{ display: 'flex', flexDirection: 'column', minHeight: '100%' }}>\n      <Logo sx={{ display: 'flex', p: 4 }} />\n      <List component='nav' sx={{ px: 2 }}>\n        {menuItems.map((item) => (\n          <ListItem\n            button\n            component={NavLink}\n            key={item.path}\n            activeClassName='Mui-selected'\n            end={true}\n            to={`/${process.env.PUBLIC_URL}${item.path}`}\n          >\n            <ListItemAvatar>\n              <Avatar sx={{ color: 'inherit', bgcolor: 'transparent' }}>\n                <item.icon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={t(item.key)}\n              sx={{\n                display: collapsed ? 'none' : 'block',\n              }}\n            />\n          </ListItem>\n        ))}\n      </List>\n      <Box sx={{ flexGrow: 1 }} />\n      <List component='nav' sx={{ p: 2 }}>\n        <ListItem\n          button\n          component={NavLink}\n          to={`/${process.env.PUBLIC_URL}/admin/profile`}\n        >\n          <ListItemAvatar>\n            <Avatar sx={{ color: 'inherit', bgcolor: 'transparent' }}>\n              <SettingsIcon />\n            </Avatar>\n          </ListItemAvatar>\n          {userInfo && (\n            <ListItemText\n              primary={`${userInfo.venueName}`}\n              sx={{\n                display: collapsed ? 'none' : 'block',\n              }}\n            />\n          )}\n        </ListItem>\n        {/*<ListItem button onClick={onSettingsToggle}>\n          <ListItemAvatar>\n            <Avatar>\n              <SettingsIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={t('admin.drawer.menu.settings')}\n            sx={{\n              display: collapsed ? 'none' : 'block',\n            }}\n          />\n        </ListItem>*/}\n      </List>\n    </Box>\n  );\n\n  return (\n    <Box\n      aria-label='Admin drawer'\n      component='nav'\n      sx={{\n        width: { lg: width },\n        flexShrink: { lg: 0 },\n      }}\n    >\n      {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n      <Drawer\n        variant='temporary'\n        open={mobileOpen}\n        onClose={onDrawerToggle}\n        ModalProps={{\n          keepMounted: true, // Better open performance on mobile.\n        }}\n        sx={{\n          display: { xs: 'block', lg: 'none' },\n          '& .MuiDrawer-paper': {\n            boxSizing: 'border-box',\n            width: width,\n          },\n        }}\n      >\n        {drawer}\n      </Drawer>\n      <Drawer\n        variant='permanent'\n        open\n        sx={{\n          display: { xs: 'none', lg: 'block' },\n          '& .MuiDrawer-paper': {\n            boxSizing: 'border-box',\n            width: width,\n          },\n        }}\n      >\n        {drawer}\n      </Drawer>\n    </Box>\n  );\n};\n\nexport default AdminDrawer;\n","import Box from \"@material-ui/core/Box\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { useState } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport QueryWrapper from \"../../core/components/QueryWrapper\";\nimport SettingsDrawer from \"../../core/components/SettingsDrawer\";\nimport { useSettings } from \"../../core/contexts/SettingsProvider\";\nimport AdminDrawer from \"../components/AdminDrawer\";\n\nconst AdminLayout = () => {\n  const [settingsOpen, setSettingsOpen] = useState(false);\n\n  const { collapsed, open, toggleDrawer } = useSettings();\n\n  const handleSettingsToggle = () => {\n    setSettingsOpen(!settingsOpen);\n  };\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <AdminDrawer\n        collapsed={collapsed}\n        mobileOpen={open}\n        onDrawerToggle={toggleDrawer}\n        onSettingsToggle={handleSettingsToggle}\n      />\n      <SettingsDrawer\n        onDrawerToggle={handleSettingsToggle}\n        open={settingsOpen}\n      />\n      <Box component=\"main\" sx={{ flexGrow: 1, pb: 3, px: { xs: 3, sm: 6 } }}>\n        <Toolbar />\n        <QueryWrapper>\n          <Outlet />\n        </QueryWrapper>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AdminLayout;\n"],"sourceRoot":""}