{"version":3,"sources":["core/config/layout.ts","admin/components/AdminAppBar.tsx","admin/components/AdminToolbar.tsx","admin/widgets/ActivityWidget.tsx","admin/widgets/BudgetWidget.tsx","admin/widgets/OverviewWidget.tsx","admin/widgets/SalesByCategoryWidget.tsx","admin/widgets/TeamProgressWidget.tsx","admin/widgets/UsersWidget.tsx","admin/pages/Dashboard.tsx"],"names":["drawerCollapsedWidth","drawerWidth","AdminAppBar","children","width","useSettings","collapsed","color","position","sx","lg","marginLeft","AdminToolbar","title","toggleDrawer","px","xs","sm","aria-label","edge","onClick","display","marginRight","variant","component","flexGrow","monthData","name","pv","ActivityWidget","t","useTranslation","theme","useTheme","useState","checkInData","setCheckInData","useEffect","a","fetchData","data","map","item","index","Card","CardHeader","CardContent","ResponsiveContainer","height","LineChart","margin","top","right","left","bottom","XAxis","axisLine","tick","fill","palette","text","secondary","fontSize","tickLine","dataKey","Tooltip","contentStyle","borderRadius","boxShadow","shadows","backgroundColor","background","paper","borderColor","Line","type","stroke","primary","main","strokeWidth","activeDot","r","data3","subject","A","BudgetWidget","data2","RadarChart","cx","cy","outerRadius","PolarAngleAxis","Radar","OverviewWidget","description","textAlign","Typography","gutterBottom","SalesByCategoryWidget","props","colors","value","Number","PieChart","Pie","isAnimationActive","itemStyle","Legend","wrapperStyle","TeamProgressWidget","TableContainer","Table","size","border","TableHead","TableRow","TableCell","align","TableBody","slice","song","Box","alignItems","mr","LinearProgress","count","minWidth","id","UsersWidget","List","ListItem","disableGutters","ListItemAvatar","Avatar","style","contain","src","link","ListItemText","primaryTypographyProps","fontWeight","typography","fontWeightMedium","artist","Dashboard","venueId","JSON","parse","localStorage","getItem","requestsData","setRequestsData","coinsData","setCoinsData","songsData","setSongsData","topSongsData","setTopSongsData","artistData","setArtistData","console","log","split","part","trim","Fragment","Grid","container","spacing","md","String","reduce","b","sum","forEach","getTotalSongData"],"mappings":"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","file":"static/js/25.d3cda918.chunk.js","sourcesContent":["export const drawerCollapsedWidth = 104;\nexport const drawerWidth = 280;\n","import AppBar from \"@material-ui/core/AppBar\";\nimport { drawerCollapsedWidth, drawerWidth } from \"../../core/config/layout\";\nimport { useSettings } from \"../../core/contexts/SettingsProvider\";\n\ntype AdminAppBarProps = {\n  children: React.ReactNode;\n};\n\nconst AdminAppBar = ({ children }: AdminAppBarProps) => {\n  const { collapsed } = useSettings();\n  const width = collapsed ? drawerCollapsedWidth : drawerWidth;\n\n  return (\n    <AppBar\n      color=\"default\"\n      position=\"fixed\"\n      sx={{\n        width: { lg: `calc(100% - ${width}px)` },\n        marginLeft: { lg: width },\n      }}\n    >\n      {children}\n    </AppBar>\n  );\n};\n\nexport default AdminAppBar;\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useSettings } from \"../../core/contexts/SettingsProvider\";\n\ntype AdminToolbarProps = {\n  children?: React.ReactNode;\n  title?: string;\n};\n\nconst AdminToolbar = ({ children, title }: AdminToolbarProps) => {\n  const { toggleDrawer } = useSettings();\n\n  return (\n    <Toolbar sx={{ px: { xs: 3, sm: 6 } }}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        edge=\"start\"\n        onClick={toggleDrawer}\n        sx={{\n          display: { lg: \"none\" },\n          marginRight: 2,\n        }}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h2\" component=\"h1\" sx={{ flexGrow: 1 }}>\n        {title}\n      </Typography>\n      {children}\n    </Toolbar>\n  );\n};\n\nexport default AdminToolbar;\n","import Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Line, LineChart, ResponsiveContainer, Tooltip, XAxis } from \"recharts\";\nimport { fetchData } from \"../config/request\";\n\nconst monthData = [\n  {\n    name: \"Jan\",\n    pv: 2400,\n  },\n  {\n    name: \"Feb\",\n    pv: 1398,\n  },\n  {\n    name: \"Mar\",\n    pv: 9800,\n  },\n  {\n    name: \"Apr\",\n    pv: 3908,\n  },\n  {\n    name: \"May\",\n    pv: 4800,\n  },\n  {\n    name: \"Jun\",\n    pv: 3800,\n  },\n  {\n    name: \"Jul\",\n    pv: 4300,\n  },\n  {\n    name: \"Aug\",\n    pv: 4300,\n  },\n  {\n    name: \"Sep\",\n    pv: 4300,\n  },\n  {\n    name: \"Oct\",\n    pv: 4300,\n  },\n  {\n    name: \"Nov\",\n    pv: 4300,\n  },\n  {\n    name: \"Dec\",\n    pv: 4300,\n  },\n];\n\nconst ActivityWidget = () => {\n  const { t } = useTranslation();\n  const theme = useTheme();\n  const [checkInData, setCheckInData] = useState<any>([]);\n  //@ts-ignore\n  useEffect(async () => {\n    const data = await fetchData(`/api/venues/4/analytics/requests?inAYear=true`, 'GET')\n    // console.log(data);\n    setCheckInData(data.map((item: any, index: number) => {\n      return {\n        name: monthData[index].name,\n        pv: item\n      }\n    })\n    );\n  }, []);\n  return (\n    <Card>\n      <CardHeader title={t(\"dashboard.activity.title\")} />\n      <CardContent>\n        <ResponsiveContainer width=\"99%\" height={244}>\n          <LineChart\n            width={500}\n            height={300}\n            data={checkInData}\n            margin={{\n              top: 5,\n              right: 16,\n              left: 16,\n              bottom: 5,\n            }}\n          >\n            <XAxis\n              axisLine={false}\n              tick={{ fill: theme.palette.text.secondary, fontSize: 12 }}\n              tickLine={false}\n              dataKey=\"name\"\n            />\n            <Tooltip\n              contentStyle={{\n                borderRadius: 16,\n                boxShadow: theme.shadows[3],\n                backgroundColor: theme.palette.background.paper,\n                borderColor: theme.palette.background.paper,\n              }}\n            />\n            <Line\n              name=\"Value\"\n              type=\"monotone\"\n              dataKey=\"pv\"\n              stroke={theme.palette.primary.main}\n              strokeWidth={6}\n              activeDot={{ r: 8 }}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ActivityWidget;\n","import Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\nimport {\n  PolarAngleAxis,\n  Radar,\n  RadarChart,\n  ResponsiveContainer,\n  Tooltip,\n} from 'recharts';\n\nconst data3 = [\n  {\n    subject: '00:00-04:00',\n    A: 110,\n  },\n  {\n    subject: '04:00-08:00',\n    A: 98,\n  },\n  {\n    subject: '08:00-12:00',\n    A: 86,\n  },\n  {\n    subject: '12:00-16:00',\n    A: 99,\n  },\n  {\n    subject: '16:00-20:00',\n    A: 85,\n  },\n  {\n    subject: '20:00-00:00',\n    A: 65,\n  },\n];\ninterface BudgetWidgetProps {\n  data: number[];\n}\nconst BudgetWidget = (data: BudgetWidgetProps) => {\n  const { t } = useTranslation();\n  const theme = useTheme();\n  const data2: any = data.data.map((item: any, index: number) => {\n    return {\n      subject: data3[index].subject,\n      A: item,\n    };\n  });\n\n  return (\n    <Card>\n      <CardHeader title={t('dashboard.budget.title')} />\n      <CardContent>\n        <ResponsiveContainer width='99%' height={244}>\n          <RadarChart cx='50%' cy='50%' outerRadius='80%' data={data2}>\n            <PolarAngleAxis\n              dataKey='subject'\n              tick={{ fill: theme.palette.text.secondary, fontSize: 14 }}\n            />\n            <Radar\n              name={t('dashboard.budget.legend.unit')}\n              dataKey='A'\n              stroke={theme.palette.primary.main}\n              strokeWidth={8}\n              fill={theme.palette.primary.main}\n            />\n            <Tooltip\n              contentStyle={{\n                borderRadius: 16,\n                boxShadow: theme.shadows[3],\n                backgroundColor: theme.palette.background.paper,\n                borderColor: theme.palette.background.paper,\n              }}\n            />\n          </RadarChart>\n        </ResponsiveContainer>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default BudgetWidget;\n","import Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\ntype OverviewWidgetProps = {\n  color?: \"primary\" | \"warning\" | \"error\";\n  description: string;\n  title: string;\n};\n\nconst OverviewWidget = ({ description, title }: OverviewWidgetProps) => {\n  return (\n    <Card>\n      <CardContent sx={{ textAlign: \"center\" }}>\n        <Typography gutterBottom component=\"div\" variant=\"h3\">\n          {title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {description}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default OverviewWidget;\n","import Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\nimport { Legend, Pie, PieChart, ResponsiveContainer, Tooltip } from 'recharts';\n\ninterface SalesByCategoryWidgetProps {\n  data: any[];\n}\nconst SalesByCategoryWidget = (props: SalesByCategoryWidgetProps) => {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const colors = [\n    {\n      fill: '#EA34C9',\n    },\n    {\n      fill: '#9F4AD7',\n    },\n    {\n      fill: '#6386E6',\n    },\n    {\n      fill: '#5BC8FA',\n    },\n  ];\n\n  const data = props.data.map((item, index) => {\n    // console.log(item);\n    // console.log(index);\n    return {\n      name: item.name,\n      fill: colors[index].fill,\n      value: Number(item.value),\n    };\n  }\n  );\n\n  return (\n    <Card>\n      <CardHeader title={t('dashboard.salesByCategory.title')} />\n      <CardContent>\n        <ResponsiveContainer width='99%' height={244}>\n          <PieChart width={244} height={244}>\n            <Pie\n              dataKey='value'\n              isAnimationActive={false}\n              data={data}\n              cx='50%'\n              cy='50%'\n              outerRadius={80}\n              stroke={theme.palette.background.paper}\n              strokeWidth={8}\n            />\n\n            <Tooltip\n              contentStyle={{\n                borderRadius: 16,\n                boxShadow: theme.shadows[3],\n                backgroundColor: theme.palette.background.paper,\n                borderColor: theme.palette.background.paper,\n              }}\n              itemStyle={{\n                color: theme.palette.text.primary,\n              }}\n            />\n            <Legend wrapperStyle={{ fontSize: 14 }} />\n          </PieChart>\n        </ResponsiveContainer>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SalesByCategoryWidget;\n","import Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport { useTranslation } from 'react-i18next';\n\nconst teams = [\n  {\n    id: '1',\n    color: 'primary.main',\n    name: 'Askin Olayim',\n    progress: 52,\n    value: 122,\n  },\n  {\n    id: '2',\n    color: 'warning.main',\n    name: 'Simply Falling',\n    progress: 33,\n    value: 82,\n  },\n  {\n    id: '3',\n    color: 'error.main',\n    name: 'Atesini Yolla Bana',\n    progress: 10,\n    value: 39,\n  },\n  {\n    id: '4',\n    color: 'text.secondary',\n    name: 'Wherever I Go',\n    progress: 5,\n    value: 9,\n  },\n];\n\nconst colors = [\n  {\n    fill: '#EA34C9',\n  },\n  {\n    fill: '#9F4AD7',\n  },\n  {\n    fill: '#6386E6',\n  },\n  {\n    fill: '#5BC8FA',\n  },\n];\n\ninterface TeamProgressWidgetProps {\n  data: any[];\n  count: number;\n}\n\nconst TeamProgressWidget = (props: TeamProgressWidgetProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <Card>\n      <CardHeader title={t('dashboard.teams.title')} />\n      <CardContent sx={{ px: 2 }}>\n        <TableContainer>\n          <Table\n            aria-label='team progress table'\n            size='small'\n            sx={{\n              '& td, & th': {\n                border: 0,\n              },\n            }}\n          >\n            <TableHead>\n              <TableRow>\n                <TableCell>{t('dashboard.teams.columns.team')}</TableCell>\n                <TableCell>{t('dashboard.teams.columns.progress')}</TableCell>\n                <TableCell align='center'>\n                  {t('dashboard.teams.columns.value')}\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {props.data.slice(0, 4).map((song, index) => (\n                <TableRow key={song[0].id}>\n                  <TableCell>\n                    <Typography color='text.secondary' component='div'>\n                      {song[0].name}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <Box sx={{ width: '100%', mr: 3 }}>\n                        <LinearProgress\n                          aria-label={`${song[0].name} progress`}\n                          color='inherit'\n                          sx={{ color: colors[index].fill }}\n                          value={(song[1] * (100)) / (props.count)}\n                          variant='determinate'\n                        />\n                      </Box>\n                      <Box sx={{ minWidth: 35 }}>\n                        <Typography\n                          component='span'\n                          variant='h6'\n                          color={colors[index].fill}\n                        >{`${(song[1] * (100)) / (props.count)}%`}</Typography>\n                      </Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell align='center'>{song[1]}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default TeamProgressWidget;\n","import Avatar from \"@material-ui/core/Avatar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useTranslation } from \"react-i18next\";\n\nconst users = [\n  {\n    id: \"1\",\n    firstName: \"Rhys\",\n    gender: \"M\",\n    lastName: \"Arriaga\",\n    role: \"Admin\",\n  },\n  {\n    id: \"2\",\n    firstName: \"Laura\",\n    gender: \"F\",\n    lastName: \"Core\",\n    role: \"Member\",\n  },\n  {\n    id: \"3\",\n    firstName: \"Joshua\",\n    gender: \"M\",\n    lastName: \"Jagger\",\n    role: \"Member\",\n  },\n];\n\ninterface UserWidgetProps {\n  data: any[];\n}\n\nconst UsersWidget = (props: UserWidgetProps) => {\n  const theme = useTheme();\n  const { t } = useTranslation();\n\n  return (\n    <Card>\n      <CardHeader title={t(\"dashboard.users.title\")} />\n      <CardContent>\n        <List>\n          {props.data.map((song) => (\n            <ListItem disableGutters key={song.id}>\n              <ListItemAvatar>\n                <Avatar>\n                  <img\n                    style={{ contain: \"cover\", width: \"100%\", height: \"100%\" }}\n                    src={song.link} />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={`${song.name}`}\n                primaryTypographyProps={{\n                  fontWeight: theme.typography.fontWeightMedium,\n                }}\n                secondary={song.artist}\n              />\n              {/* <ListItemSecondaryAction>\n                <IconButton\n                  aria-label=\"Go to user details\"\n                  component={RouterLink}\n                  edge=\"end\"\n                  to={`/${process.env.PUBLIC_URL}/admin/user-management`}\n                >\n                  <ChevronRightIcon />\n                </IconButton>\n              </ListItemSecondaryAction> */}\n            </ListItem>\n          ))}\n        </List>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default UsersWidget;\n","import Grid from '@material-ui/core/Grid';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport AdminAppBar from '../components/AdminAppBar';\nimport AdminToolbar from '../components/AdminToolbar';\nimport ActivityWidget from '../widgets/ActivityWidget';\nimport BudgetWidget from '../widgets/BudgetWidget';\nimport OverviewWidget from '../widgets/OverviewWidget';\nimport SalesByCategoryWidget from '../widgets/SalesByCategoryWidget';\nimport TeamProgressWidget from '../widgets/TeamProgressWidget';\nimport UsersWidget from '../widgets/UsersWidget';\nimport { fetchData } from '../config/request';\n\nconst Dashboard = () => {\n  const { t } = useTranslation();\n  const userInfo = JSON.parse(localStorage.getItem('venueInfo'));\n  const venueId = userInfo.venueId;\n\n  const [checkInData, setCheckInData] = useState<number[]>([]);\n  const [requestsData, setRequestsData] = useState<number[]>([]);\n  const [coinsData, setCoinsData] = useState<number[]>([]);\n  const [songsData, setSongsData] = useState<any[]>([]);\n  const [topSongsData, setTopSongsData] = useState<any[]>([]);\n  const [artistData, setArtistData] = useState<any[]>([]);\n\n  //@ts-ignore\n  useEffect(async () => {\n    const data: number[] = await fetchData(`/api/venues/${venueId}/analytics/checkIns?inADayPer4Hours=true`, 'GET')\n    // console.log(data);\n    setCheckInData(data);\n  }, []);\n  //@ts-ignore\n  useEffect(async () => {\n    const data = await fetchData(`/api/venues/${venueId}/analytics/requests?inADay=true`, 'GET')\n    // console.log(data);\n    setRequestsData(data);\n  }, []);\n  //@ts-ignore\n  useEffect(async () => {\n    const data = await fetchData(`/api/venues/${venueId}/analytics/coinsSpent?inADay=true`, 'GET')\n    // console.log(data);\n    setCoinsData(data);\n  }, []);\n  //@ts-ignore\n  useEffect(async () => {\n    const data = await fetchData(`/api/venues/${venueId}/analytics/recentRequests`, 'GET')\n    // console.log(data);\n    setSongsData(data);\n  }, []);\n  //@ts-ignore\n  useEffect(async () => {\n    const data = await fetchData(`/api/venues/${venueId}/analytics/topRequests`, 'GET')\n    console.log(data);\n    setTopSongsData(data);\n  }, []);\n  //@ts-ignore\n  useEffect(async () => {\n    const data = await fetchData(`/api/venues/${venueId}/analytics/requestsPerArtist`, 'GET')\n    // console.log(data);\n    setArtistData(\n      data.slice(0, 4).map((item: any) => {\n        const [name, value] = item.split(\":\").map((part: any) => part.trim());\n        return { name, value };\n      })\n    );\n  }, []);\n\n  function getTotalVisits(): string {\n    return String(checkInData.reduce((a, b) => a + b, 0));\n  }\n  function getTotalRequests(): string {\n    return String(requestsData.reduce((a, b) => a + b, 0));\n  }\n  function getTotalCoins(): string {\n    return String(coinsData.reduce((a, b) => a + b, 0));\n  }\n  function getTotalSongData(): number {\n    let sum = 0;\n    topSongsData.forEach((item) => {\n      sum += item[1];\n    });\n    return sum;\n  }\n\n  return (\n    <React.Fragment>\n      <AdminAppBar>\n        <AdminToolbar title={t('dashboard.title')} />\n      </AdminAppBar>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={4}>\n          <OverviewWidget\n            description={t('dashboard.overview.visits')}\n            title={getTotalVisits()} />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <OverviewWidget\n            description={t('dashboard.overview.songsPlayed')}\n            title={getTotalRequests()} />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <OverviewWidget\n            description={t('dashboard.overview.coinsCollected')}\n            title={getTotalCoins()} />\n        </Grid>\n        <Grid item xs={12} md={8}>\n          <ActivityWidget />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          {\n            //@ts-ignore  \n          }\n          <BudgetWidget data={checkInData} />\n        </Grid>\n        <Grid item xs={12} md={12}>\n          <UsersWidget data={songsData} />\n        </Grid>\n        <Grid item xs={12} md={8}>\n          <TeamProgressWidget data={topSongsData} count={getTotalSongData()} />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <SalesByCategoryWidget data={artistData} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}