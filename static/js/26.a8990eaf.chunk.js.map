{"version":3,"sources":["core/config/layout.ts","admin/components/AdminAppBar.tsx","admin/components/AdminToolbar.tsx","admin/pages/Faq.tsx"],"names":["drawerCollapsedWidth","drawerWidth","AdminAppBar","children","width","useSettings","collapsed","color","position","sx","lg","marginLeft","AdminToolbar","title","toggleDrawer","px","xs","sm","aria-label","edge","onClick","display","marginRight","variant","component","flexGrow","questions","answer","Faq","t","useTranslation","Fragment","maxWidth","align","marginBottom","map","question","index","expandIcon","RouterLink","to","process"],"mappings":"qIAAA,oEAAO,IAAMA,EAAuB,IACvBC,EAAc,K,iCCD3B,sCA0BeC,IAlBK,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAEfC,EADgBC,cAAdC,UACkBN,IAAuBC,IAEjD,OACE,cAAC,IAAD,CACEM,MAAM,UACNC,SAAS,QACTC,GAAI,CACFL,MAAO,CAAEM,GAAG,eAAD,OAAiBN,EAAjB,QACXO,WAAY,CAAED,GAAIN,IALtB,SAQGD,M,iCCrBP,iEAoCeS,IAzBM,SAAC,GAA4C,IAA1CT,EAAyC,EAAzCA,SAAUU,EAA+B,EAA/BA,MACxBC,EAAiBT,cAAjBS,aAER,OACE,eAAC,IAAD,CAASL,GAAI,CAAEM,GAAI,CAAEC,GAAI,EAAGC,GAAI,IAAhC,UACE,cAAC,IAAD,CACEV,MAAM,UACNW,aAAW,cACXC,KAAK,QACLC,QAASN,EACTL,GAAI,CACFY,QAAS,CAAEX,GAAI,QACfY,YAAa,GAPjB,SAUE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKf,GAAI,CAAEgB,SAAU,GAAxD,SACGZ,IAEFV,O,iCC/BP,6IAaMuB,EAAY,CAChB,CACEb,MAAO,uBACPc,OAAQ,yBAEV,CACEd,MAAO,uBACPc,OAAQ,yBAEV,CACEd,MAAO,uBACPc,OAAQ,yBAEV,CACEd,MAAO,uBACPc,OAAQ,yBAEV,CACEd,MAAO,uBACPc,OAAQ,yBAEV,CACEd,MAAO,uBACPc,OAAQ,0BA0CGC,UAtCH,WACV,IAAQC,EAAMC,cAAND,EAER,OACE,eAAC,IAAME,SAAP,WACE,cAAC,IAAD,UACE,cAAC,IAAD,MAEF,eAAC,IAAD,CAAWC,SAAS,KAApB,UACE,cAAC,IAAD,CAAYC,MAAM,SAASC,aAAc,EAAGX,QAAQ,KAApD,SACGM,EAAE,eAEJH,EAAUS,KAAI,SAACC,EAAUC,GAAX,OACb,eAAC,IAAD,WACE,cAAC,IAAD,CAAkBC,WAAY,cAAC,IAAD,IAA9B,SACE,cAAC,IAAD,CAAYd,UAAU,IAAID,QAAQ,KAAlC,SACGM,EAAEO,EAASvB,WAGhB,cAAC,IAAD,UACE,cAAC,IAAD,CAAYN,MAAM,iBAAlB,SACGsB,EAAEO,EAAST,cARFU,MAalB,cAAC,IAAD,CACEb,UAAWe,IACXC,GAAE,WAAMC,wBAAN,eACFlB,QAAQ,QAHV,SAKGM,EAAE","file":"static/js/26.a8990eaf.chunk.js","sourcesContent":["export const drawerCollapsedWidth = 104;\nexport const drawerWidth = 280;\n","import AppBar from \"@material-ui/core/AppBar\";\nimport { drawerCollapsedWidth, drawerWidth } from \"../../core/config/layout\";\nimport { useSettings } from \"../../core/contexts/SettingsProvider\";\n\ntype AdminAppBarProps = {\n  children: React.ReactNode;\n};\n\nconst AdminAppBar = ({ children }: AdminAppBarProps) => {\n  const { collapsed } = useSettings();\n  const width = collapsed ? drawerCollapsedWidth : drawerWidth;\n\n  return (\n    <AppBar\n      color=\"default\"\n      position=\"fixed\"\n      sx={{\n        width: { lg: `calc(100% - ${width}px)` },\n        marginLeft: { lg: width },\n      }}\n    >\n      {children}\n    </AppBar>\n  );\n};\n\nexport default AdminAppBar;\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useSettings } from \"../../core/contexts/SettingsProvider\";\n\ntype AdminToolbarProps = {\n  children?: React.ReactNode;\n  title?: string;\n};\n\nconst AdminToolbar = ({ children, title }: AdminToolbarProps) => {\n  const { toggleDrawer } = useSettings();\n\n  return (\n    <Toolbar sx={{ px: { xs: 3, sm: 6 } }}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        edge=\"start\"\n        onClick={toggleDrawer}\n        sx={{\n          display: { lg: \"none\" },\n          marginRight: 2,\n        }}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h2\" component=\"h1\" sx={{ flexGrow: 1 }}>\n        {title}\n      </Typography>\n      {children}\n    </Toolbar>\n  );\n};\n\nexport default AdminToolbar;\n","import Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport AdminAppBar from \"../components/AdminAppBar\";\nimport AdminToolbar from \"../components/AdminToolbar\";\n\nconst questions = [\n  {\n    title: \"faq.questions.title1\",\n    answer: \"faq.questions.answer1\",\n  },\n  {\n    title: \"faq.questions.title2\",\n    answer: \"faq.questions.answer2\",\n  },\n  {\n    title: \"faq.questions.title3\",\n    answer: \"faq.questions.answer3\",\n  },\n  {\n    title: \"faq.questions.title4\",\n    answer: \"faq.questions.answer4\",\n  },\n  {\n    title: \"faq.questions.title5\",\n    answer: \"faq.questions.answer5\",\n  },\n  {\n    title: \"faq.questions.title6\",\n    answer: \"faq.questions.answer6\",\n  },\n];\n\nconst Faq = () => {\n  const { t } = useTranslation();\n\n  return (\n    <React.Fragment>\n      <AdminAppBar>\n        <AdminToolbar />\n      </AdminAppBar>\n      <Container maxWidth=\"sm\">\n        <Typography align=\"center\" marginBottom={6} variant=\"h2\">\n          {t(\"faq.title\")}\n        </Typography>\n        {questions.map((question, index) => (\n          <Accordion key={index}>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n              <Typography component=\"p\" variant=\"h6\">\n                {t(question.title)}\n              </Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Typography color=\"text.secondary\">\n                {t(question.answer)}\n              </Typography>\n            </AccordionDetails>\n          </Accordion>\n        ))}\n        <Link\n          component={RouterLink}\n          to={`/${process.env.PUBLIC_URL}/admin/help`}\n          variant=\"body2\"\n        >\n          {t(\"faq.noAnswerLink\")}\n        </Link>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default Faq;\n"],"sourceRoot":""}