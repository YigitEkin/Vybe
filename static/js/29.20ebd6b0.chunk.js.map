{"version":3,"sources":["core/config/layout.ts","admin/components/AdminAppBar.tsx","admin/components/AdminToolbar.tsx","admin/pages/Profile.tsx"],"names":["drawerCollapsedWidth","drawerWidth","AdminAppBar","children","width","useSettings","collapsed","color","position","sx","lg","marginLeft","AdminToolbar","title","toggleDrawer","px","xs","sm","aria-label","edge","onClick","display","marginRight","variant","component","flexGrow","Profile","useAuth","isLoggingOut","logout","userInfo","JSON","parse","localStorage","getItem","useState","snackbar","useSnackbar","t","useTranslation","base64","setBase64","useEffect","a","fetchData","venueId","data","length","console","log","image","uploadImage","base64ToUpload","String","id","error","Fragment","disabled","catch","container","spacing","item","md","marginTop","flexDirection","alignItems","textAlign","mb","bgcolor","height","fontSize","src","venueName","htmlFor","style","name","type","accept","onChange","e","file","target","files","reader","FileReader","readAsDataURL","onload","result","mt","value","size"],"mappings":"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","file":"static/js/29.20ebd6b0.chunk.js","sourcesContent":["export const drawerCollapsedWidth = 104;\nexport const drawerWidth = 280;\n","import AppBar from \"@material-ui/core/AppBar\";\nimport { drawerCollapsedWidth, drawerWidth } from \"../../core/config/layout\";\nimport { useSettings } from \"../../core/contexts/SettingsProvider\";\n\ntype AdminAppBarProps = {\n  children: React.ReactNode;\n};\n\nconst AdminAppBar = ({ children }: AdminAppBarProps) => {\n  const { collapsed } = useSettings();\n  const width = collapsed ? drawerCollapsedWidth : drawerWidth;\n\n  return (\n    <AppBar\n      color=\"default\"\n      position=\"fixed\"\n      sx={{\n        width: { lg: `calc(100% - ${width}px)` },\n        marginLeft: { lg: width },\n      }}\n    >\n      {children}\n    </AppBar>\n  );\n};\n\nexport default AdminAppBar;\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useSettings } from \"../../core/contexts/SettingsProvider\";\n\ntype AdminToolbarProps = {\n  children?: React.ReactNode;\n  title?: string;\n};\n\nconst AdminToolbar = ({ children, title }: AdminToolbarProps) => {\n  const { toggleDrawer } = useSettings();\n\n  return (\n    <Toolbar sx={{ px: { xs: 3, sm: 6 } }}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        edge=\"start\"\n        onClick={toggleDrawer}\n        sx={{\n          display: { lg: \"none\" },\n          marginRight: 2,\n        }}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h2\" component=\"h1\" sx={{ flexGrow: 1 }}>\n        {title}\n      </Typography>\n      {children}\n    </Toolbar>\n  );\n};\n\nexport default AdminToolbar;\n","// @ts-nocheck\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Fab from '@material-ui/core/Fab';\nimport Grid from '@material-ui/core/Grid';\nimport { Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport PersonIcon from '@material-ui/icons/Person';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport { useAuth } from '../../auth/contexts/AuthProvider';\nimport QueryWrapper from '../../core/components/QueryWrapper';\nimport { useSnackbar } from '../../core/contexts/SnackbarProvider';\nimport AdminAppBar from '../components/AdminAppBar';\nimport AdminToolbar from '../components/AdminToolbar';\nimport QRCode from 'react-qr-code';\nimport { fetchData } from '../config/request';\n\nconst profileMenuItems = [\n  {\n    key: 'profile.menu.info',\n    path: './information',\n  },\n  {\n    key: 'profile.menu.password',\n    path: './password',\n  },\n];\n\nconst Profile = () => {\n  const { isLoggingOut, logout } = useAuth();\n  const userInfo = JSON.parse(localStorage.getItem('venueInfo'));\n  const [username, setUsername] = useState(localStorage.getItem('username'));\n  const snackbar = useSnackbar();\n  const { t } = useTranslation();\n  const [base64, setBase64] = useState('')\n\n  const handleLogout = () => {\n    logout().catch(() =>\n      snackbar.error(t('common.errors.unexpected.subTitle'))\n    );\n  };\n\n  //@ts-ignore\n  useEffect(async () => {\n    const data = await fetchData(`/api/venues/${userInfo.venueId}/images`, 'GET')\n    if (data === null || data.length === 0) {\n      setBase64('')\n      return\n    }\n    console.log(data[0].image);\n    setBase64(data[0].image)\n  }, []);\n\n  const uploadImage = async (base64ToUpload: String) => {\n    // console.log(base64ToUpload);\n    const data = await fetchData(`/api/venues/${userInfo.venueId}/images`, 'POST', {\n      image: String(base64ToUpload),\n      id: userInfo.venueId,\n    });\n    console.log(data);\n    if (data) {\n      setBase64(base64ToUpload)\n    }\n    else {\n      snackbar.error(t('common.errors.unexpected.subTitle'))\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <AdminAppBar>\n        <AdminToolbar>\n          <Fab\n            aria-label='logout'\n            color='secondary'\n            disabled={isLoggingOut}\n            onClick={handleLogout}\n          >\n            <ExitToAppIcon />\n          </Fab>\n        </AdminToolbar>\n      </AdminAppBar>\n      <Grid container spacing={12}>\n        <Grid item xs={12} md={12} marginTop={3}>\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              textAlign: 'center',\n              mb: 6,\n            }}\n          >\n            <Avatar\n              sx={{\n                bgcolor: 'background.paper',\n                mb: 3,\n                height: 220,\n                width: 220,\n              }}\n            >\n              {(base64 === '' || base64 === null) ? (\n                <PersonIcon\n                  sx={{\n                    fontSize: 160,\n                  }} />\n              ) : (\n                <img\n                  width={'auto'}\n                  height={220}\n                  src={`${base64}`}\n                />\n              )}\n            </Avatar>\n\n            <Typography\n              component='div'\n              variant='h4'\n            >{`${userInfo?.venueName} `}</Typography>\n            <label htmlFor=\"upload-photo\">\n              <input\n                style={{ display: 'none' }}\n                id=\"upload-photo\"\n                name=\"upload-photo\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={(e) => {\n                  const file = e.target.files[0];\n                  if (!file) return;\n                  const reader = new FileReader();\n                  reader.readAsDataURL(file);\n                  reader.onload = () => {\n                    console.log(reader.result);\n                    uploadImage(reader.result);\n                  }\n                }}\n              />\n              <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                component=\"span\"\n                sx={{ mt: 4 }}>\n                {`Update Venue Image`}\n              </Button>\n            </label>\n            {/*<Typography variant='body2'>{userInfo?.role}</Typography>*/}\n          </Box>\n          {/*<CircleProgressWidget\n            height={244}\n            title={t(\"profile.completion.title\")}\n            value={75}\n          />*/}\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              textAlign: 'center',\n              mb: 6,\n            }}\n          >\n            <QRCode\n              value={userInfo ? String(userInfo.venueId) : 'QR Failed'}\n              size={256}\n            />\n          </Box>\n        </Grid>\n        {/* <Grid item xs={12} md={8} marginTop={3}>\n          <Box sx={{ mb: 4 }}>\n            <Tabs aria-label='profile nav tabs' value={false}>\n              {profileMenuItems.map((item) => (\n                <Tab\n                  key={item.key}\n                  activeClassName='Mui-selected'\n                  end={true}\n                  component={NavLink}\n                  label={t(item.key)}\n                  to={item.path}\n                />\n              ))}\n            </Tabs>\n          </Box>\n          <QueryWrapper>\n            <Outlet />\n          </QueryWrapper>\n        </Grid> */}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default Profile;\n"],"sourceRoot":""}